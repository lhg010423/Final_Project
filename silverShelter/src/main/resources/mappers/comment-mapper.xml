<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silver.shelter.board.model.mapper.CommentMapper">

	<!-- 댓글 목록 조회 -->
	<select id="select">
		SELECT LEVEL, C.*
		FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			BOARD_NO, MEMBER_NO, MEMBER_NAME, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
						
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>


	<!-- 댓글 작성 -->
	<insert id="insert">
		INSERT INTO "COMMENT"
		VALUES(SEQ_COMMENT_NO.NEXTVAL, #{commentContent},
			DEFAULT, DEFAULT, #{boardNo}, #{memberNo},
			
			<if test="parentCommentNo != 0">
				#{parentCommentNo}
			</if>
			
			<if test="parentCommentNo == 0">
				NULL
			</if>
			, 0, 0
			
		)
	</insert>

	<!-- 댓글 삭제 -->
	<update id="delete">
		UPDATE "COMMENT" SET
		COMMENT_DEL_FL = 'Y'
		WHERE COMMENT_NO = #{commentNo}
	</update>


	<!-- 댓글 수정 -->
	<update id="update">
		UPDATE "COMMENT" SET
		COMMENT_CONTENT = #{commentContent}
		WHERE COMMENT_NO = #{commentNo}
	</update>


	<!-- 검색안한 댓글 전체 수 조회 -->
	<select id="commentAllCount">
	    SELECT COUNT(*)
	    FROM "COMMENT"
	    WHERE BOARD_NO = #{boardNo}
	    AND (
	        COMMENT_DEL_FL = 'N' OR
	        EXISTS (
	            SELECT 1
	            FROM "COMMENT" SUB
	            WHERE SUB.PARENT_COMMENT_NO = COMMENT_NO
	            AND COMMENT_DEL_FL = 'N'
	        )
	    )
	</select>
	
	
	<!-- 검색안한 댓글 전체 조회 -->
	<select id="commentAllSelect">
		SELECT LEVEL, C.*
		FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			BOARD_NO, MEMBER_NO, MEMBER_NAME, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
						
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	
	
	
	
	
	<!-- 검색한 댓글 전체 수 조회 -->
	<select id="commentSearchCount">

	    SELECT COUNT(*)
	    FROM "COMMENT" C
	    RIGHT JOIN "MEMBER" M USING(MEMBER_NO)
	    WHERE C.BOARD_NO = #{boardNo}
	    <choose>
	        <!-- 작성자 검색 -->
	        <when test='commentKey == "w"'>
	            AND M.MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
	        </when>
	        
	        <!-- 댓글 내용 검색 -->
	        <when test='commentKey == "c"'>
	            AND C.COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
	        </when>
	    </choose>
	    AND (
	        COMMENT_DEL_FL = 'N' OR
	        EXISTS (
	            SELECT 1
	            FROM "COMMENT" SUB
	            WHERE SUB.PARENT_COMMENT_NO = COMMENT_NO
	            AND COMMENT_DEL_FL = 'N'
	        )
	    )

		
	
		<!-- SELECT COUNT(*)
	    FROM "COMMENT"
	    JOIN MEMBER USING(MEMBER_NO)
	    WHERE BOARD_NO = #{boardNo}
	    
		<choose>
		
			작성자 검색
			<when test='commentKey == "w"'>
				AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
			</when>
		
			댓글 내용 검색
			<when test='commentKey == "c"'>
				AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
			</when>
		
		</choose>
		
	    AND (
	        COMMENT_DEL_FL = 'N' OR
	        EXISTS (
	            SELECT 1
	            FROM "COMMENT" SUB
	            WHERE SUB.PARENT_COMMENT_NO = COMMENT_NO
	            AND COMMENT_DEL_FL = 'N'
	        )
	    ) -->
		
		
	</select>


	<!-- 검색한 댓글 전체 조회 -->
	<select id="commentSearchSelect" parameterType="map">
		SELECT LEVEL, C.*
		FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			BOARD_NO, MEMBER_NO, MEMBER_NAME, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}
			<choose>
	            <!-- 작성자 검색 -->
	            <when test='commentKey == "w"'>
	                AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
	            </when>
	            
	            <!-- 댓글 내용 검색 -->
	            <when test='commentKey == "c"'>
	                AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
	            </when>
	        </choose>
			) C
		WHERE COMMENT_DEL_FL = 'N'
		
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N'
						)
		<choose>
            <!-- 작성자 검색 -->
            <when test='commentKey == "w"'>
                AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
            </when>
            
            <!-- 댓글 내용 검색 -->
            <when test='commentKey == "c"'>
                AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
            </when>
        </choose>				
						
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	
	
		<!-- SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			    BOARD_NO, MEMBER_NO, MEMBER_NAME, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}
			<choose>
	            작성자 검색
	            <when test='commentKey == "w"'>
	                AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
	            </when>
	            
	            댓글 내용 검색
	            <when test='commentKey == "c"'>
	                AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
	            </when>
	        </choose>
			) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO -->
	</select>
		
		
	    <!-- SELECT LEVEL, C.*
	    FROM (
	        SELECT C.COMMENT_NO, C.COMMENT_CONTENT,
	               TO_CHAR(C.COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
	               C.BOARD_NO, C.MEMBER_NO, M.MEMBER_NAME, C.PARENT_COMMENT_NO, C.COMMENT_DEL_FL
	        FROM "COMMENT" C
	        RIGHT JOIN "MEMBER" M ON C.MEMBER_NO = M.MEMBER_NO
	        WHERE C.BOARD_NO = #{boardNo}
	        <choose>
	            작성자 검색
	            <when test='commentKey == "w"'>
	                AND M.MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
	            </when>
	            
	            댓글 내용 검색
	            <when test='commentKey == "c"'>
	                AND C.COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
	            </when>
	        </choose>
	    ) C
	    WHERE C.COMMENT_DEL_FL = 'N'
	    OR 0 != (
	        SELECT COUNT(*)
	        FROM "COMMENT" SUB
	        WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
	        AND C.COMMENT_DEL_FL = 'N'
	    )
	    START WITH C.PARENT_COMMENT_NO IS NULL
	    CONNECT BY PRIOR C.COMMENT_NO = C.PARENT_COMMENT_NO
	    ORDER SIBLINGS BY C.COMMENT_NO -->
		
	
	
	
		<!-- SELECT LEVEL, C.*
		FROM (
		    SELECT 
		        COMMENT_NO, 
		        COMMENT_CONTENT,
		        TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS COMMENT_WRITE_DATE,
		        BOARD_NO, 
		        MEMBER_NO, 
		        MEMBER_NAME, 
		        PARENT_COMMENT_NO, 
		        COMMENT_DEL_FL
		    FROM "COMMENT"
		    JOIN MEMBER USING(MEMBER_NO)
		    WHERE BOARD_NO = #{boardNo}
		    <choose>
		        작성자 검색
		        <when test='commentKey == "w"'>
		            AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
		        </when>
		    
		        댓글 내용 검색
		        <when test='commentKey == "c"'>
		            AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
		        </when>
		    </choose>
		) C
		WHERE COMMENT_DEL_FL = 'N'
		   OR (
		       COMMENT_DEL_FL = 'Y' 
		       AND (
		           PARENT_COMMENT_NO IS NULL 
		           AND EXISTS (
		               SELECT 1 
		               FROM "COMMENT" SUB 
		               WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO 
		               AND SUB.COMMENT_DEL_FL = 'N'
		           )
		       )
		   )
		   OR (
		       COMMENT_NO IN (
		           SELECT PARENT_COMMENT_NO
		           FROM "COMMENT"
		           WHERE PARENT_COMMENT_NO IS NOT NULL
		           AND COMMENT_DEL_FL = 'N'
		           <choose>
		               작성자 검색
		               <when test='commentKey == "w"'>
		                   AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
		               </when>
		            
		               댓글 내용 검색
		               <when test='commentKey == "c"'>
		                   AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
		               </when>
		           </choose>
		       )
		   )
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO -->
		
		
		<!-- SELECT LEVEL, C.*
		FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			BOARD_NO,
			MEMBER_NO,
			MEMBER_NAME,
			PARENT_COMMENT_NO,
			COMMENT_DEL_FL
			
			FROM "COMMENT"
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}
			<choose>
		
				작성자 검색
				<when test='commentKey == "w"'>
					AND MEMBER_NAME LIKE '%' || #{commentQuery} || '%'
				</when>
			
				댓글 내용 검색
				<when test='commentKey == "c"'>
					AND COMMENT_CONTENT LIKE '%' || #{commentQuery} || '%'
				</when>
			
			</choose>
			
			) C
		WHERE COMMENT_DEL_FL = 'N'
		
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
						
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO -->
		
		<!-- ORDER BY COMMENT_WRITE_DATE DESC -->
	








</mapper>