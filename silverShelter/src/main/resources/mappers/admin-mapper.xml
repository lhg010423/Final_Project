<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silver.shelter.admin.model.mapper.AdminMapper">

	<resultMap type="Board" id="board_rm">
	
		<id property="boardNo" column="BOARD_NO"/>
		
		<collection 
			property="commentList"
			select="commentListSelect"
			column="BOARD_NO"
			javaType="java.util.ArrayList"
			ofType="Comment"
		/>
			
	</resultMap>
	

	<!-- <typeAlias alias="member" type="silverShelter.member.model.dto.Member"/> -->
	
	<!-- 탈퇴하지 않은 회원 수 조회 -->
	<select id="memberAllCount">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_DEL_FL = 'N'
	</select>


	<!-- 탈퇴하지 않았고 검색조건에 맞는 회원 수 조회 -->
	<select id="memberSearchCount">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		
		<choose>
			
			<!-- 이름 검색 -->
			<when test='key == "n"'>
				AND MEMBER_NAME LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 아이디 검색 -->
			<when test='key == "i"'>
				AND MEMBER_ID LIKE '%' || #{query} || '%'
			</when>
			
		</choose>
	</select>



	<!-- 회원 목록 조회 / 검색 X -->
	<select id="memberAllSelect">
		SELECT MEMBER_NAME, MEMBER_ID, MEMBER_NO, EXAM_STATUS,
		TO_CHAR(EXAM_DATE, 'YYYY"."MM"."DD  HH24":"MI":"SS') EXAM_DATE
		FROM "MEMBER"
		JOIN "EXAMINATION" USING(EXAM_ID)
		WHERE MEMBER_ROLE = 2 <!-- 2 : 회원 -->
		ORDER BY MEMBER_NO DESC
	</select>

	<!-- 검색한 회원 조회 -->
	<select id="memberSearchSelect">
		SELECT MEMBER_NAME, MEMBER_ID, MEMBER_NO, EXAM_STATUS
		FROM "MEMBER"
		JOIN "EXAMINATION" USING(EXAM_ID)
		WHERE MEMBER_ROLE = 2 <!-- 2 : 회원 -->
		
		<choose>
			
			<!-- 이름 검색 -->
			<when test='key == "n"'>
				AND MEMBER_NAME LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 아이디 검색 -->
			<when test='key == "i"'>
				AND MEMBER_ID LIKE '%' || #{query} || '%'
			</when>
			
		</choose>
		
		ORDER BY MEMBER_NO DESC
	</select>
	
	
	<!-- 회원 상세 조회 -->
	<select id="adminDetailSelect" resultType="Member">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_ID, MEMBER_PW,
			MEMBER_EMAIL, MEMBER_ADDRESS, MEMBER_TEL,
			GUARDIAN_TEL, CAREGIVERS_NAME
		FROM "MEMBER"
		LEFT JOIN "CAREGIVERS" USING(CAREGIVERS_NO)
		WHERE MEMBER_NO = #{memberNo}
	</select>


	<!-- 심사 서류 관리 페이지 게시글 수 조회X -->
	<select id="examinationAllCount">
		SELECT COUNT(*)
		FROM "EXAMINATION"
		WHERE EXAM_STATUS = 'N'
	</select>
	
	
	
	
	<!-- 심사 서류 관리 페이지 전체 게시글 조회하기 (승인여부가 N이고 심사고유번호가 낮을수록 상단에 출력됨  -->
	<select id="examinationAllSelect">
		SELECT EXAM_ID, EXAM_NAME, EXAM_EMAIL, EXAM_ROOM_TYPE || '/' || EXAM_ROOM_CAPACITY AS EXAM_ROOM,
			EXAM_STATUS, EXAM_DATE
		FROM "EXAMINATION"
		WHERE EXAM_STATUS = 'N'
		ORDER BY EXAM_STATUS, EXAM_ID <!-- 승인여부 : N, 심사고유번호 -->
	</select>
	
	
	<!-- 심사 서류 관리 페이지 게시글 수 조회O -->
	<select id="examinationSearchCount">
		SELECT COUNT(*)
		FROM "EXAMINATION"
		WHERE EXAM_STATUS = 'N'
		<choose>
			
			<!-- 이름으로 검색 -->
			<when test='key == "n"'>
				AND EXAM_NAME LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 이메일으로 검색 -->
			<when test='key == "n"'>
				AND EXAM_EMAIL LIKE '%' || #{query} || '%'
			</when>
			
			
		</choose>
	</select>
	
	
	<!-- 심사 서류 관리 페이지 검색한 게시글 조회하기 -->
	<select id="examinationSearchSelect">
		SELECT EXAM_ID, EXAM_NAME, EXAM_EMAIL, EXAM_ROOM_TYPE || '/' || EXAM_ROOM_CAPACITY AS EXAM_ROOM,
			EXAM_STATUS, EXAM_DATE
		FROM "EXAMINATION"
		WHERE EXAM_STATUS = 'N'
		<choose>
			
			<!-- 이름으로 검색 -->
			<when test='key == "n"'>
				AND EXAM_NAME LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 이메일으로 검색 -->
			<when test='key == "e"'>
				AND EXAM_EMAIL LIKE '%' || #{query} || '%'
			</when>
			
		</choose>
		ORDER BY EXAM_ID
	</select>
	
	
	<!-- 심사 서류 관리 상세 조회 -->
	<select id="examinationDetailSelect" resultType="Examination">
		SELECT EXAM_ID, EXAM_NAME, EXAM_EMAIL, EXAM_PHONE,
			EXAM_STATUS, EXAM_DATE, EXAM_ROOM_TYPE || '/' || EXAM_ROOM_CAPACITY AS EXAM_ROOM
		FROM "EXAMINATION"
		WHERE EXAM_ID = #{examId}
	</select>
	
	
	<update id="updateAdminDocument">
			UPDATE EXAMINATION
			SET EXAM_STATUS = 'Y'
			WHERE EXAM_ID = #{examId}
	
	</update>
	
	
	
	
	
	
	<!-- 요양사 수 전체 조회 -->
	<select id="caregiversAllCount">
		SELECT COUNT(*)
		FROM "CAREGIVERS"
	</select>
	
	
	<!-- 요양사 데이터 전체 조회 -->
	<select id="caregiversAllSelect">
		SELECT CAREGIVERS_NO, CAREGIVERS_NAME, CAREGIVERS_AGE, CAREGIVERS_TEL,
		
			CASE
				WHEN CAREGIVERS_GENDER = 'male' THEN '남자'
				WHEN CAREGIVERS_GENDER = 'female' THEN '여자'
			END as CAREGIVERS_GENDER,
			
			CASE
				WHEN CAREGIVERS_EXPERIENCE = 'novice' THEN '3년 미만'
				WHEN CAREGIVERS_EXPERIENCE = 'intermediate' THEN '3-7년'
				WHEN CAREGIVERS_EXPERIENCE = 'experienced' THEN '8년 이상'
			END as CAREGIVERS_EXPERIENCE,
			
			CASE
				WHEN CAREGIVERS_WORK_HOURS = 'morning' THEN '09:00 - 13:00'
				WHEN CAREGIVERS_WORK_HOURS = 'afternoon' THEN '13:00 - 18:00'
				WHEN CAREGIVERS_WORK_HOURS = 'evening' THEN '18:00 - 22:00'
			END as CAREGIVERS_WORK_HOURS,
			
			CASE
				WHEN CAREGIVERS_ROLE = 'companionship' THEN '정서적 지원'
				WHEN CAREGIVERS_ROLE = 'personalCare' THEN '의료적 지원'
				WHEN CAREGIVERS_ROLE = 'housekeeping' THEN '일상생활 지원'
			END as CAREGIVERS_ROLE
			
		FROM "CAREGIVERS"
	</select>
	
	
	<select id="caregiversSearchCount">
		SELECT COUNT(*)
		FROM CAREGIVERS
		WHERE
		<choose>
			<when test='key == "name"'>
				CAREGIVERS_NAME LIKE '%' || #{query} || '%'
			</when>
			
			<when test='key == "experience"'>
				CAREGIVERS_EXPERIENCE = #{query}
			</when>
			
			<when test='key == "workHours"'>
				CAREGIVERS_WORK_HOURS = #{query}
			</when>
			
			<when test='key == "jobDuties"'>
				CAREGIVERS_ROLE = #{query}
			</when>
		</choose>
	</select>
	
	
	<select id="caregiversSearchSelect">
		SELECT CAREGIVERS_NO, CAREGIVERS_NAME, CAREGIVERS_AGE, CAREGIVERS_TEL,
		
			CASE
				WHEN CAREGIVERS_GENDER = 'male' THEN '남자'
				WHEN CAREGIVERS_GENDER = 'female' THEN '여자'
			END as CAREGIVERS_GENDER,
			
			CASE
				WHEN CAREGIVERS_EXPERIENCE = 'novice' THEN '3년 미만'
				WHEN CAREGIVERS_EXPERIENCE = 'intermediate' THEN '3-7년'
				WHEN CAREGIVERS_EXPERIENCE = 'experienced' THEN '8년 이상'
			END as CAREGIVERS_EXPERIENCE,
			
			CASE
				WHEN CAREGIVERS_WORK_HOURS = 'morning' THEN '09:00 - 13:00'
				WHEN CAREGIVERS_WORK_HOURS = 'afternoon' THEN '13:00 - 18:00'
				WHEN CAREGIVERS_WORK_HOURS = 'evening' THEN '18:00 - 22:00'
			END as CAREGIVERS_WORK_HOURS,
			
			CASE
				WHEN CAREGIVERS_ROLE = 'companionship' THEN '정서적 지원'
				WHEN CAREGIVERS_ROLE = 'personalCare' THEN '의료적 지원'
				WHEN CAREGIVERS_ROLE = 'housekeeping' THEN '일상생활 지원'
			END as CAREGIVERS_ROLE
		FROM CAREGIVERS
		WHERE
		<choose>
			<when test='key == "name"'>
				CAREGIVERS_NAME LIKE '%' || #{query} || '%'
			</when>
			
			<when test='key == "experience"'>
				CAREGIVERS_EXPERIENCE = #{query}
			</when>
			
			<when test='key == "workHours"'>
				CAREGIVERS_WORK_HOURS = #{query}
			</when>
			
			<when test='key == "jobDuties"'>
				CAREGIVERS_ROLE = #{query}
			</when>
		</choose>
	</select>
	
	
	<!-- 요양사 상세조회 -->
	<select id="caregiversDetailSelect">
		SELECT CAREGIVERS_NO, CAREGIVERS_NAME, CAREGIVERS_AGE, CAREGIVERS_TEL,
		
			CASE
				WHEN CAREGIVERS_GENDER = 'male' THEN '남자'
				WHEN CAREGIVERS_GENDER = 'female' THEN '여자'
			END as CAREGIVERS_GENDER,
			
			CASE
				WHEN CAREGIVERS_EXPERIENCE = 'novice' THEN '3년 미만'
				WHEN CAREGIVERS_EXPERIENCE = 'intermediate' THEN '3-7년'
				WHEN CAREGIVERS_EXPERIENCE = 'experienced' THEN '8년 이상'
			END as CAREGIVERS_EXPERIENCE,
			
			CASE
				WHEN CAREGIVERS_WORK_HOURS = 'morning' THEN '09:00 - 13:00'
				WHEN CAREGIVERS_WORK_HOURS = 'afternoon' THEN '13:00 - 18:00'
				WHEN CAREGIVERS_WORK_HOURS = 'evening' THEN '18:00 - 22:00'
			END as CAREGIVERS_WORK_HOURS,
			
			CASE
				WHEN CAREGIVERS_ROLE = 'companionship' THEN '정서적 지원'
				WHEN CAREGIVERS_ROLE = 'personalCare' THEN '의료적 지원'
				WHEN CAREGIVERS_ROLE = 'housekeeping' THEN '일상생활 지원'
			END as CAREGIVERS_ROLE
		FROM CAREGIVERS
		WHERE CAREGIVERS_NO = #{caregiversNo}
	</select>

	
	
	<!-- 여가 일정 전체 조회 -->
	<select id="clubAllSelect">
		SELECT CLUB_NAME
		FROM 
		
	</select>
	
	
	<!-- 게시글 상세조회 -->
	<select id="boardDetailSelect" resultMap="board_rm">
		SELECT b.BOARD_NO, b.BOARD_TITLE, b.BOARD_CONTENT, m.MEMBER_NAME, b.BOARD_WRITE_DATE,
			b.BOARD_UPDATE_DATE, b.READ_COUNT, b.LIKE_COUNT, b.BOARD_CODE, b.MEMBER_NO
		FROM "BOARD" b
		JOIN "MEMBER" m ON b.MEMBER_NO = m.MEMBER_NO
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	
	<select id="commentListSelect" resultType="Comment">
   		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			    BOARD_NO, MEMBER_NO, MEMBER_NAME, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
   	</select>
   	








	<!-- 일정 조회 -->
   	<select id="getReservedDates">
   		SELECT TO_CHAR(DR_APPT_TIME, 'YYYY-MM-DD') AS "reservationDate"
   		FROM DOCTOR_APPOINTMENT
   		
   		UNION
   		
   		SELECT TO_CHAR(CLUB_RESV_TIME, 'YYYY-MM-DD') AS "reservationDate"
   		FROM CLUB_RESERVATION
   	</select>
   	
   	
   	
   	<!-- 해당 날짜 일정 전체 조회하기 -->
   	<!-- <select id="reservationAllSelect">
   		SELECT
	
			CLUB_NAME AS "type",
			CONCAT('CR_', CLUB_RESV_NO) AS "resvId",
			MEMBER_NAME AS "memberName",
			TO_CHAR(CLUB_RESV_TIME, 'YYYY-MM-DD') AS "reservationDate",
			TO_CHAR(CLUB_RESV_TIME, 'HH24') AS "reservationTime"
		
		FROM CLUB_RESERVATION
		JOIN MEMBER USING(MEMBER_NO)
		JOIN CLUB_TYPE USING(CLUB_CODE)
		WHERE TO_CHAR(CLUB_RESV_TIME, 'YYYY-MM-DD') = TO_CHAR(#{reservation}, 'YYYY-MM-DD')
		
		UNION
			
		SELECT
			
			MAJOR_NAME AS "type",
			CONCAT('DR_', DR_APPT_NO) AS "resvId",
			MEMBER_NAME AS "memberName",
			TO_DATE(DR_APPT_TIME, 'YYYY-MM-DD') AS "reservationDate",
			TO_CHAR(DR_APPT_TIME, 'HH24') AS "reservationTime"
		
		FROM DOCTOR
		JOIN DOCTOR_APPOINTMENT USING(DOCTOR_NO)
		JOIN DOCTOR_MAJOR USING(MAJOR_CODE)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE TO_CHAR(CLUB_RESV_TIME, 'YYYY-MM-DD') = TO_CHAR(#{reservation}, 'YYYY-MM-DD')
   	
   	</select> -->
   	
   	
   	
   	<!-- 특정 날짜의 예약 목록을 가져오는 함수 -->
   	<select id="getReservationsForDate" resultType="Reservation">
   		SELECT
	
			CLUB_NAME AS "type",
			CONCAT('CR_', CLUB_RESV_NO) AS "resvId",
			MEMBER_NAME AS "memberName",
			TO_CHAR(CLUB_RESV_TIME, 'YYYY-MM-DD') AS "reservationDate",
			TO_NUMBER(TO_CHAR(CLUB_RESV_TIME, 'HH24')) AS "reservationTime",
			2 AS "typeOrder"
		
		FROM CLUB_RESERVATION
		JOIN MEMBER USING(MEMBER_NO)
		JOIN CLUB_TYPE USING(CLUB_CODE)
		WHERE TO_CHAR(CLUB_RESV_TIME, 'YYYY-MM-DD') = #{clubResvTime}
		
		UNION
			
		SELECT
			
			MAJOR_NAME AS "type",
			CONCAT('DR_', DR_APPT_NO) AS "resvId",
			MEMBER_NAME AS "memberName",
			TO_CHAR(DR_APPT_TIME, 'YYYY-MM-DD') AS "reservationDate",
			TO_NUMBER(TO_CHAR(DR_APPT_TIME, 'HH24')) AS "reservationTime",
			1 AS "typeOrder"
		
		FROM DOCTOR
		JOIN DOCTOR_APPOINTMENT USING(DOCTOR_NO)
		JOIN DOCTOR_MAJOR USING(MAJOR_CODE)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE TO_CHAR(DR_APPT_TIME, 'YYYY-MM-DD') = #{clubResvTime}
		
   		ORDER BY "typeOrder", "reservationTime", "type", "memberName"
   	</select>
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
	

</mapper>