#오라클 DB 연결 정보
spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@115.90.212.22:10000:XE
# DB ID / PW 추후 변경 
spring.datasource.hikari.username=silver_shelter
spring.datasource.hikari.password=silver1234

# HikariCP Connection Pool Properties
#풀이 연결을 사용할 수 있을 때까지 대기하는 최대 시간(ms)을 지정
spring.datasource.hikari.connection-timeout=30000

# 풀의 최대 연결 수 설정
spring.datasource.hikari.maximum-pool-size=20

# 연결이 풀에서 유휴 상태로 있을 수 있는 최대 시간(ms)을 지정
spring.datasource.hikari.idle-timeout=600000

# 연결 풀의 이름을 지정
spring.datasource.hikari.pool-name=MyHikariCP

# 자동 커밋 끄기
spring.datasource.hikari.auto-commit=false

spring.mail.username=gggorru@gmail.com
spring.mail.password=qevaloxagjrrhkef

# 파일을 디스크에 쓸 때까지의 임계값
# 기본값 : 0B(0Byte)
# 50MB == 52,428,800B
# -> 업로드 되는 파일의 크기 50MB까지는 메모리에 저장하다가 
#    초과시 디스크(HDD, SSD)에 저장
spring.servlet.multipart.file-size-threshold=52428800

# HTTP 요청당 최대 크기
# 기본값 : 10MB
# 50MB == 52,428,800B
spring.servlet.multipart.max-request-size=52428800

# 개별 파일당 최대 크기(input 태그에 multiple 속성 적용 후 여러 개의 파일을 업로드 시 개별 파일당 최대 크기)
# 기본값 : 1MB
# 10MB == 10,485,760B
spring.servlet.multipart.max-file-size=10485760

# 파일의 임시 저장 경로
# \AppData\Local\Temp\tomcat.80.~~~~~~~~\work\Tomcat...
# 톰캣 기본 폴더로 저장경로가 지정되어있음
spring.servlet.multipart.location=C:\\silverShelterServer\\temp\\


# 카테고리 서류 저장 경로
category.document.resource-handler=/document/**
category.document.resource-location=file:///C:/silverShelterServer/document/



# 게시글 이미지 요청 주소
my.board.resource-handler=/images/board/**
# 게시글 이미지 요청 시 연결할 서버 폴더 경로
my.board.resource-location=file:///C:/silverShelterServer/board/
# 게시글 이미지 요청 주소 (DB 저장용)
my.board.web-path=/images/board/
# 게시글 이미지를 서버에 저장할 때 사용할 경로 ( transferTo() ) 
my.board.folder-path=C:/silverShelterServer/board/

# -------------------------------------------------------------

# 공공데이터 포털 ServiceKey encode
my.public.data.service.key.encode=QH%2FFLIzW5Mvv5mhKZOBq5jo9y2RhH8A%2FrKTdDcntOdAmZagTpf0y4pYiiPw%2FNumb6Qm8RATvL9bW8GFD6QN1dQ%3D%3D

# 공공데이터 포털 ServiceKey decode(js 에서 URLSearchParams 사용 시 decode 키 사용해야함)
my.public.data.service.key.decode=QH/FLIzW5Mvv5mhKZOBq5jo9y2RhH8A/rKTdDcntOdAmZagTpf0y4pYiiPw/Numb6Qm8RATvL9bW8GFD6QN1dQ==